# .gitlab-ci.yml

stages:
  - validate
  - plan
  - apply
  - deploy

variables:
  TF_IN_AUTOMATION: "true"
  TF_VERSION: "1.4.6"
  ARM_SUBSCRIPTION_ID: "$ARM_SUBSCRIPTION_ID"
  ARM_TENANT_ID:       "$ARM_TENANT_ID"
  ARM_CLIENT_ID:       "$ARM_CLIENT_ID"
  ARM_CLIENT_SECRET:   "$ARM_CLIENT_SECRET"

image: hashicorp/terraform:light

before_script:
  - terraform -version

validate:
  stage: validate
  script:
    - cd terraform
    - terraform init -input=false
    - terraform validate

plan:
  stage: plan
  script:
    - cd terraform
    - terraform init -input=false
    - terraform plan -out=tfplan -input=false
  artifacts:
    paths:
      - terraform/tfplan
      - terraform/terraform.tfstate

apply:
  stage: apply
  when: manual
  only:
    - main
  script:
    - cd terraform
    - terraform init -input=false
    - terraform apply -auto-approve tfplan

deploy:
  stage: deploy
  image: python:3.10
  before_script:
    - pip install --no-cache-dir ansible==7.5.0
  script:
    - cd terraform
    - terraform output -json vm_ips > ips.json
    - python3 - <<EOF
import json
ips = json.load(open('ips.json'))['value']
with open('../ansible/inventory','w') as f:
    f.write('[app]\n')
    for i, ip in enumerate(ips, start=1):
        f.write(f'vm-{i} ansible_host={ip} ansible_user=azureuser\n')
    f.write('\n[mongodb]\n')
    f.write('mongodb ansible_host=' + ip.replace('10.0.1.', '10.0.1.4') + ' ansible_user=azureuser\n')
EOF
    - cd ../ansible
    - ansible-playbook -i inventory site.yml
  only:
    - main
